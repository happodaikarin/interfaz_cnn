{"ast":null,"code":"var _jsxFileName = \"/home/happodaikarin/carpeeta2/proyectoRN/FrontEnd/interfaz_cnn/src/components/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImageUpload() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [speciesInfo, setSpeciesInfo] = useState(null); // Nuevo estado\n  const [imageToShow, setImageToShow] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageToShow(URL.createObjectURL(file));\n      setImage(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image) return;\n    const formData = new FormData();\n    formData.append('file', image);\n    try {\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setPrediction(data.prediccion);\n      // No mostrar la imagen hasta recibir la predicción\n    } catch (error) {\n      console.error('Error al enviar la imagen:', error);\n      setImageToShow(null); // En caso de error, no mostrar imagen\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar Imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Predicci\\xF3n: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), imageToShow && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageToShow,\n        alt: \"Imagen subida\",\n        style: {\n          maxWidth: '300px',\n          maxHeight: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUpload, \"GkXdQiOz73jXR5H1XMjdQlaYvcg=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUpload","_s","image","setImage","prediction","setPrediction","speciesInfo","setSpeciesInfo","imageToShow","setImageToShow","handleImageChange","e","file","target","files","URL","createObjectURL","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","prediccion","error","console","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["/home/happodaikarin/carpeeta2/proyectoRN/FrontEnd/interfaz_cnn/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ImageUpload() {\n  const [image, setImage] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [speciesInfo, setSpeciesInfo] = useState(null); // Nuevo estado\n  const [imageToShow, setImageToShow] = useState(null);\n\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageToShow(URL.createObjectURL(file));\n      setImage(file);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!image) return;\n\n    const formData = new FormData();\n    formData.append('file', image);\n\n    try {\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      setPrediction(data.prediccion);\n      // No mostrar la imagen hasta recibir la predicción\n    } catch (error) {\n      console.error('Error al enviar la imagen:', error);\n      setImageToShow(null); // En caso de error, no mostrar imagen\n    }\n  };\n\n  return (\n    <div className=\"image-upload-container\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" onChange={handleImageChange} />\n        <button type=\"submit\">Enviar Imagen</button>\n      </form>\n      {prediction && (\n        <>\n          <p>Predicción: {prediction}</p>\n          {imageToShow && <img src={imageToShow} alt=\"Imagen subida\" style={{ maxWidth: '300px', maxHeight: '300px' }} />}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}